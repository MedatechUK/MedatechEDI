Option Strict Off
Option Explicit On

Imports System.Xml.Serialization
Imports System.IO
Imports System.ComponentModel.Composition
Imports MedatechUK.Deserialiser
Imports MedatechUK.Logging
Imports System.ComponentModel

<Export(GetType(ILexor))>
<ExportMetadata("LexName", "RunBatLexor")>
<ExportMetadata("LexVers", "1.0")>
<ExportMetadata("Parser", eParser.xml)>
<ExportMetadata("SerialType", GetType(runbatconfig))>
<ExportMetadata("LoadType", "abc")>
Public Class RunBatLex
    Inherits Lexor
    Implements ILexor

End Class

'
'This source code was auto-generated by xsd, Version=2.0.50727.1432.
'

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.1432"),
 System.SerializableAttribute(),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code"),
 System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True),
 System.Xml.Serialization.XmlRootAttribute([Namespace]:="", IsNullable:=False)>
Partial Public Class runbatconfig
    Implements IDisposable

    Private locField As New List(Of runbatconfigLoc)

    '''<remarks/>
    <System.Xml.Serialization.XmlElementAttribute("loc")>
    Public Property loc As List(Of runbatconfigLoc)
        Get
            Return Me.locField
        End Get
        Set
            Me.locField = Value
        End Set
    End Property

#Region "IDisposable Support"
    Private disposedValue As Boolean ' To detect redundant calls

    ' IDisposable
    Protected Overridable Sub Dispose(disposing As Boolean)
        If Not disposedValue Then
            If disposing Then
                ' TODO: dispose managed state (managed objects).
            End If

            ' TODO: free unmanaged resources (unmanaged objects) and override Finalize() below.
            ' TODO: set large fields to null.
        End If
        disposedValue = True
    End Sub

    ' TODO: override Finalize() only if Dispose(disposing As Boolean) above has code to free unmanaged resources.
    'Protected Overrides Sub Finalize()
    '    ' Do not change this code.  Put cleanup code in Dispose(disposing As Boolean) above.
    '    Dispose(False)
    '    MyBase.Finalize()
    'End Sub

    ' This code added by Visual Basic to correctly implement the disposable pattern.
    Public Sub Dispose() Implements IDisposable.Dispose
        ' Do not change this code.  Put cleanup code in Dispose(disposing As Boolean) above.
        Dispose(True)
        ' TODO: uncomment the following line if Finalize() is overridden above.
        ' GC.SuppressFinalize(Me)
    End Sub

#End Region

End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.1432"),
 System.SerializableAttribute(),
 System.Diagnostics.DebuggerStepThroughAttribute(),
 System.ComponentModel.DesignerCategoryAttribute("code"),
 System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)>
Partial Public Class runbatconfigLoc
    Implements IDisposable

    Private pathField As String

    Private binField As String

    Private environmentField As String

    Private filetypeField As String

    <System.Xml.Serialization.XmlIgnore()>
    Public isLexor As Boolean = False

#Region "CTOR"

    Sub New()

    End Sub

    Sub New(path As String, bin As String, environment As String, Optional filetype As String = Nothing)
        pathField = path
        binField = bin
        environmentField = environment
        filetypeField = filetype

    End Sub

#End Region

    '''<remarks/>    
    <System.Xml.Serialization.XmlAttributeAttribute()>
    <DisplayName("Directory"),
    Description("The local directory for the action, relative to the current working directory."),
    Category("Monitor"),
    Editor(GetType(FolderBrowse), GetType(System.Drawing.Design.UITypeEditor))>
    Public Property path() As String
        Get
            Return Me.pathField
        End Get
        Set
            Me.pathField = Value
            changes = True
        End Set
    End Property

    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute()>
    <DisplayName("Binary"),
    Description("The batch (.bat), executable (.exe) or Lexor class that handles downloaded files. For .bat/.exe binary the downloaded filename is passed as %1 (1st parameter)."),
    Category("Monitor"),
    Editor(GetType(BinSelEdit), GetType(System.Drawing.Design.UITypeEditor))>
    Public Property bin() As String
        Get
            Return Me.binField
        End Get
        Set
            Me.binField = Value
            changes = True
        End Set
    End Property

    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute()>
    <DisplayName("Environment"),
    Description("The Priority environment that downloaded files will to loaded to. For .bat/.exe binary this is passed as %2 (2nd parameter)."),
    Category("Monitor")>
    Public Property environment() As String
        Get
            Return Me.environmentField
        End Get
        Set
            Me.environmentField = Value
            changes = True
        End Set
    End Property

    '''<remarks/>
    <System.Xml.Serialization.XmlAttributeAttribute()>
    <DisplayName("File type"),
    Description("The type of file to process, e.g. *.xml"),
    Category("Monitor")>
    Public Property filetype() As String
        Get
            Return Me.filetypeField
        End Get
        Set
            Me.filetypeField = Value
            changes = True
        End Set
    End Property

#Region "IDisposable Support"

    Private disposedValue As Boolean ' To detect redundant calls

    ' IDisposable
    Protected Overridable Sub Dispose(disposing As Boolean)
        If Not disposedValue Then
            If disposing Then
                ' TODO: dispose managed state (managed objects).
            End If

            ' TODO: free unmanaged resources (unmanaged objects) and override Finalize() below.
            ' TODO: set large fields to null.
        End If
        disposedValue = True
    End Sub

    ' TODO: override Finalize() only if Dispose(disposing As Boolean) above has code to free unmanaged resources.
    'Protected Overrides Sub Finalize()
    '    ' Do not change this code.  Put cleanup code in Dispose(disposing As Boolean) above.
    '    Dispose(False)
    '    MyBase.Finalize()
    'End Sub

    ' This code added by Visual Basic to correctly implement the disposable pattern.
    Public Sub Dispose() Implements IDisposable.Dispose
        ' Do not change this code.  Put cleanup code in Dispose(disposing As Boolean) above.
        Dispose(True)
        ' TODO: uncomment the following line if Finalize() is overridden above.
        ' GC.SuppressFinalize(Me)
    End Sub

#End Region

End Class
